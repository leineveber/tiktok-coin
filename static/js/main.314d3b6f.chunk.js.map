{"version":3,"sources":["constants/config/domains.js","components/layouts/Header/Header.styles.js","components/layouts/Header/Header.jsx","components/layouts/MainLayout.styles.js","routes/routesPaths.js","constants/config/footerNavigation.jsx","components/common/Button/Button.styles.js","components/layouts/Footer/Footer.styles.js","components/common/Button/Button.jsx","components/layouts/Footer/Footer.jsx","components/layouts/MainLayout.jsx","constants/config/instance.js","services/onlineUsers.service.js","store/slices/index.js","store/slices/onlineUsersSlice/onlineUsersSlice.js","store/store.js","routes/routes.js","pages/MainPage.jsx","pages/TopPage.jsx","pages/ShopPage.jsx","pages/ReferalsPage.jsx","pages/MorePage.jsx","styles/GlobalStyles.js","styles/theme.js","App.jsx","reportWebVitals.js","index.jsx"],"names":["schema","baseDomain","baseApi","UsernameText","styled","Text","props","theme","colors","text","secondary","OnlineText","Header","onlineUsers","useSelector","state","value","username","auth","user","justify","MainFooter","Footer","border","routesPaths","footerNavigation","path","name","icon","TeamOutlined","ShoppingCartOutlined","UserOutlined","GoldOutlined","MenuOutlined","Btn","type","css","additional","main","primary","children","media","md","shadow","location","useLocation","navigate","useNavigate","footerNavItems","useMemo","map","item","span","pathname","onClick","direction","size","wrap","MainLayout","Content","axios","require","default","create","baseURL","getOnlineUsers","createAsyncThunk","_","thunkApi","a","get","response","data","rejectWithValue","rootReducer","createSlice","initialState","isLoading","error","reducers","extraReducers","pending","fulfilled","action","payload","rejected","store","configureStore","reducer","routes","component","GlobalStyles","createGlobalStyle","standardColors","info","success","warning","breakpoints","xs","xl","getBreakpointPx","breakpoint","radius","App","route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GAAA,iIAAO,IAAMA,EAAS,QACTC,EAAa,gBACbC,EAAO,UAAMF,EAAN,kBAAsBC,EAAtB,Q,sPCCPE,EAAeC,YAAO,IAAWC,KAAlBD,CAAH,2CACd,SAACE,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,KAAKC,aAGjCC,EAAaP,YAAO,IAAWC,KAAlBD,CAAH,0B,OCFVQ,EAAS,WACpB,IAAMC,EAAcC,aAAY,SAACC,GAAD,uBAAWA,EAAMF,mBAAjB,aAAW,EAAmBG,SACxDC,EAAWH,aAAY,SAACC,GAAD,uBAAWA,EAAMG,YAAjB,aAAW,EAAYC,QAEpD,OACE,oBAAKC,QAAQ,gBAAb,UACE,4BACE,cAAC,EAAD,UAAiBH,GAAY,oEAG/B,4BACE,eAAC,EAAD,oDAAuBJ,GAAe,+DCbjCQ,EAAajB,YAAO,IAAOkB,OAAdlB,CAAH,0DACG,SAACE,GAAD,OAAWA,EAAMC,MAAMC,OAAOe,U,0BCJ3CC,EACA,IADAA,EAED,OAFCA,EAGA,QAHAA,EAII,YAJJA,EAKA,Q,6CCDAC,EAAmB,CAC9B,CACEC,KAAMF,EACNG,KAAM,qBACNC,KAAM,cAACC,EAAA,EAAD,KAER,CACEH,KAAMF,EACNG,KAAM,6CACNC,KAAM,cAACE,EAAA,EAAD,KAER,CACEJ,KAAMF,EACNG,KAAM,6CACNC,KAAM,cAACG,EAAA,EAAD,KAER,CACEL,KAAMF,EACNG,KAAM,mDACNC,KAAM,cAACI,EAAA,EAAD,KAER,CACEN,KAAMF,EACNG,KAAM,qBACNC,KAAM,cAACK,EAAA,EAAD,M,oCCzBGC,EAAM9B,YAAO,IAAPA,CAAH,oCACZ,SAACE,GAAD,MACe,SAAfA,EAAM6B,MACNC,YADA,mGAEW9B,EAAMC,MAAMC,OAAOC,KAAK4B,WAGtB/B,EAAMC,MAAMC,OAAO8B,KAAKC,YCP5BL,EAAM9B,aCAG,SAAC,GAAD,IAAGoC,EAAH,EAAGA,SAAalC,EAAhB,mCAA4B,cAAC,EAAD,2BAAWA,GAAX,aAAmBkC,ODAlDpC,CAAH,4OAUW,SAACE,GAAD,OAAWA,EAAMC,MAAMkC,MAAMC,MAIpD,SAACpC,GAAD,MACe,YAAfA,EAAM6B,KACFC,YADJ,uGAGoB9B,EAAMC,MAAMoC,QAE5BP,YALJ,kFAQe9B,EAAMC,MAAMC,OAAOC,KAAK4B,eEpB9Bf,GAAS,WACpB,IAAMsB,EAAWC,cACXC,EAAWC,cAEXC,EAAiBC,mBACrB,kBACExB,EAAiByB,KAAI,SAACC,GAAD,OACnB,mBAAKC,KAAM,EAAX,SACE,cAAC,EAAD,CAAOjB,KAAMS,EAASS,WAAaF,EAAKzB,KAAO,UAAY,UAAW4B,QAAS,kBAAMR,EAASK,EAAKzB,OAAnG,SACE,oBAAO6B,UAAU,WAAWC,KAAM,EAAlC,UACGL,EAAKvB,KACLuB,EAAKxB,WAJOwB,EAAKzB,WAS5B,CAACkB,EAAUE,IAGb,OACE,mBAAK1B,QAAQ,gBAAgBqC,MAAM,EAAnC,SACGT,KCrBMU,GAAa,SAAC,GAAD,IAAGlB,EAAH,EAAGA,SAAH,OACxB,8BACE,kBAAQ5B,OAAR,UACE,cAAC,EAAD,MAEF,mBAAQ+C,QAAR,WAAiBnB,EAAjB,UACA,cAAC,EAAD,UACE,cAAC,GAAD,U,gDCbWoB,GAAUC,EAAQ,KAA3BC,QACA5D,GAAY2D,EAAQ,KAApB3D,QAEKW,GAAc+C,GAAMG,OAAO,CACtCC,QAAQ,GAAD,OAAK9D,GAAL,YCDI+D,GAAiBC,aAAiB,uBAAD,yCAAyB,WAAOC,EAAGC,GAAV,gBAAAC,EAAA,+EAE5CxD,GAAYyD,IAAI,QAF4B,cAE7DC,EAF6D,yBAI5DA,EAASC,MAJmD,yDAM5DJ,EAASK,gBAAT,OAN4D,yDAAzB,yDCDjCC,GAAc,CACzB7D,YCM8B8D,aAAY,CAC1ChD,KAAM,cACNiD,aARmB,CACnB5D,MAAO,EACP6D,WAAW,EACXC,MAAO,IAMPC,SAAU,GACVC,eAAa,oBACVf,GAAegB,QAAQ9C,MAAO,SAACpB,GAC9BA,EAAM8D,WAAY,KAFT,eAIVZ,GAAeiB,UAAU/C,MAAO,SAACpB,EAAOoE,GACvCpE,EAAM8D,WAAY,EAClB9D,EAAM+D,MAAQ,GACd/D,EAAMC,MAAQmE,EAAOC,WAPZ,eASVnB,GAAeoB,SAASlD,MAAO,SAACpB,EAAOoE,GACtCpE,EAAM8D,WAAY,EAClB9D,EAAM+D,MAAQK,EAAOC,WAXZ,KAgBf,SC1BaE,GAAQC,aAAe,CAClCC,QAASd,KCGEe,GAAS,CACpB,CACE/D,KAAMF,EACNkE,UCRoB,kBAAM,0BDU5B,CACEhE,KAAMF,EACNkE,UEZmB,kBAAM,0BFc3B,CACEhE,KAAMF,EACNkE,UGhBoB,kBAAM,0BHkB5B,CACEhE,KAAMF,EACNkE,UIpBwB,kBAAM,0BJsBhC,CACEhE,KAAMF,EACNkE,UKxBoB,kBAAM,2BCAjBC,GAAeC,YAAH,0LCFnBC,GAEO,UAaPrF,GAAS,CACb8B,KAAM,CACJC,QAhBI,UAiBJ7B,UAAWmF,GACXC,KAhBQ,UAiBRC,QAfK,UAgBLjB,MAdG,UAeHkB,QAbM,UAeRvF,KAAM,CACJ6B,KArBK,UAsBL5B,UAAWmF,GACXxD,WAfQ,WAiBVd,OAlBM,WAyBF0E,GAAc,CAClBC,GAAI,IACJxD,GAAI,IACJyD,GAAI,MAGAC,GAAkB,SAACC,GAAD,4BAA+BA,EAA/B,QAQX9F,GAAQ,CAAE0F,eAAaxD,MANtB,CACZyD,GAAIE,GAAgBH,GAAYC,IAChCxD,GAAI0D,GAAgBH,GAAYvD,IAChCyD,GAAIC,GAAgBH,GAAYE,KAGS3F,UAAQe,OAlBpC,CACb+E,OAAQ,OAiBiD3D,OAAQ,+BCxCtD4D,GAAM,kBACjB,mCACE,eAAC,IAAD,CAAUjB,MAAOA,GAAjB,UACE,cAACK,GAAD,IACA,cAAC,IAAD,CAAepF,MAAOA,GAAtB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UACE,cAAC,IAAD,UACGkF,GAAOvC,KAAI,SAACsD,GAAD,OACV,cAAC,IAAD,eAA4BA,GAAhBA,EAAM9E,uBCLnB+E,GAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.314d3b6f.chunk.js","sourcesContent":["export const schema = 'https';\nexport const baseDomain = 'tiktokcoin.ru';\nexport const baseApi = `${schema}://api.${baseDomain}/v1`;\n","import { Typography } from 'antd';\nimport styled from 'styled-components';\n\nexport const UsernameText = styled(Typography.Text)`\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nexport const OnlineText = styled(Typography.Text)``;\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as S from './Header.styles';\n\nexport const Header = () => {\n  const onlineUsers = useSelector((state) => state.onlineUsers?.value);\n  const username = useSelector((state) => state.auth?.user);\n\n  return (\n    <Row justify=\"space-between\">\n      <Col>\n        <S.UsernameText>{username || 'Юзернейм ТГ'}</S.UsernameText>\n      </Col>\n\n      <Col>\n        <S.OnlineText>Онлайн: {onlineUsers || 'Загрузка...'}</S.OnlineText>\n      </Col>\n    </Row>\n  );\n};\n","import styled from 'styled-components';\nimport { Layout } from 'antd';\n\nexport const MainFooter = styled(Layout.Footer)`\n  border-top: 1px solid ${(props) => props.theme.colors.border};\n`;\n","export const routesPaths = {\n  MAIN_PAGE: '/',\n  TOP_PAGE: '/top',\n  SHOP_PAGE: '/shop',\n  REFERALS_PAGE: '/referals',\n  MORE_PAGE: '/more',\n};\n","import React from 'react';\nimport { routesPaths } from 'routes/routesPaths';\nimport { TeamOutlined, ShoppingCartOutlined, UserOutlined, GoldOutlined, MenuOutlined } from '@ant-design/icons';\n\nexport const footerNavigation = [\n  {\n    path: routesPaths.TOP_PAGE,\n    name: 'Топ',\n    icon: <TeamOutlined />,\n  },\n  {\n    path: routesPaths.SHOP_PAGE,\n    name: 'Магазин',\n    icon: <ShoppingCartOutlined />,\n  },\n  {\n    path: routesPaths.MAIN_PAGE,\n    name: 'Профиль',\n    icon: <UserOutlined />,\n  },\n  {\n    path: routesPaths.REFERALS_PAGE,\n    name: 'Рефералы',\n    icon: <GoldOutlined />,\n  },\n  {\n    path: routesPaths.MORE_PAGE,\n    name: 'Еще',\n    icon: <MenuOutlined />,\n  },\n];\n","import styled, { css } from 'styled-components';\nimport { Button } from 'antd';\n\nexport const Btn = styled(Button)`\n  ${(props) =>\n    props.type === 'text' &&\n    css`\n      color: ${props.theme.colors.text.additional};\n\n      &:hover {\n        color: ${props.theme.colors.main.primary};\n      }\n    `};\n`;\n","import { Button } from 'components/common/Button/Button';\nimport styled, { css } from 'styled-components';\n\nexport const Btn = styled(Button)`\n  height: unset;\n  font-size: 0.65rem;\n  width: 100%;\n  padding: 4px 5px;\n\n  & span[role='img'] {\n    font-size: 1.25rem;\n  }\n\n  @media only screen and ${(props) => props.theme.media.md} {\n    font-size: 0.875rem;\n  }\n\n  ${(props) =>\n    props.type === 'primary'\n      ? css`\n          transform: translateY(-5px);\n          box-shadow: ${props.theme.shadow};\n        `\n      : css`\n          border: 0;\n\n          color: ${props.theme.colors.text.additional};\n        `}\n`;\n","import React from 'react';\nimport * as S from './Button.styles';\n\nexport const Button = ({ children, ...props }) => <S.Btn {...props}>{children}</S.Btn>;\n","import React, { useMemo } from 'react';\nimport { Col, Row, Space } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { footerNavigation } from 'constants/config/footerNavigation';\nimport * as S from './Footer.styles';\n\nexport const Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const footerNavItems = useMemo(\n    () =>\n      footerNavigation.map((item) => (\n        <Col span={4} key={item.path}>\n          <S.Btn type={location.pathname === item.path ? 'primary' : 'default'} onClick={() => navigate(item.path)}>\n            <Space direction=\"vertical\" size={0}>\n              {item.icon}\n              {item.name}\n            </Space>\n          </S.Btn>\n        </Col>\n      )),\n    [location, navigate],\n  );\n\n  return (\n    <Row justify=\"space-between\" wrap={false}>\n      {footerNavItems}\n    </Row>\n  );\n};\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { Header } from './Header/Header';\nimport * as S from './MainLayout.styles';\nimport { Footer } from './Footer/Footer';\n\nexport const MainLayout = ({ children }) => (\n  <Layout>\n    <Layout.Header>\n      <Header />\n    </Layout.Header>\n    <Layout.Content>{children}test</Layout.Content>\n    <S.MainFooter>\n      <Footer />\n    </S.MainFooter>\n  </Layout>\n);\n","const { default: axios } = require('axios');\nconst { baseApi } = require('./domains');\n\nexport const onlineUsers = axios.create({\n  baseURL: `${baseApi}/users`,\n});\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { onlineUsers } from 'constants/config/instance';\n\nexport const getOnlineUsers = createAsyncThunk('onlineUsers/fetchAll', async (_, thunkApi) => {\n  try {\n    const response = await onlineUsers.get('/api');\n\n    return response.data;\n  } catch (e) {\n    return thunkApi.rejectWithValue(e);\n  }\n});\n","import onlineUsersReducer from './onlineUsersSlice/onlineUsersSlice';\n\nexport const rootReducer = {\n  onlineUsers: onlineUsersReducer,\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { getOnlineUsers } from 'services/onlineUsers.service';\n\nconst initialState = {\n  value: 0,\n  isLoading: false,\n  error: '',\n};\n\nexport const onlineUsersSlice = createSlice({\n  name: 'onlineUsers',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getOnlineUsers.pending.type]: (state) => {\n      state.isLoading = true;\n    },\n    [getOnlineUsers.fulfilled.type]: (state, action) => {\n      state.isLoading = false;\n      state.error = '';\n      state.value = action.payload;\n    },\n    [getOnlineUsers.rejected.type]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport default onlineUsersSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './slices';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n","import { MainPage } from 'pages/MainPage';\nimport { MorePage } from 'pages/MorePage';\nimport { ReferalsPage } from 'pages/ReferalsPage';\nimport { ShopPage } from 'pages/ShopPage';\nimport { TopPage } from 'pages/TopPage';\nimport { routesPaths } from './routesPaths';\n\nexport const routes = [\n  {\n    path: routesPaths.MAIN_PAGE,\n    component: MainPage,\n  },\n  {\n    path: routesPaths.TOP_PAGE,\n    component: TopPage,\n  },\n  {\n    path: routesPaths.SHOP_PAGE,\n    component: ShopPage,\n  },\n  {\n    path: routesPaths.REFERALS_PAGE,\n    component: ReferalsPage,\n  },\n  {\n    path: routesPaths.MORE_PAGE,\n    component: MorePage,\n  },\n];\n","import React from 'react';\n\nexport const MainPage = () => <div />;\n","import React from 'react';\n\nexport const TopPage = () => <div />;\n","import React from 'react';\n\nexport const ShopPage = () => <div />;\n","import React from 'react';\n\nexport const ReferalsPage = () => <div />;\n","import React from 'react';\n\nexport const MorePage = () => <div />;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        box-sizing: border-box;\n    }\n\n    body {\n        min-width: 360px;\n    }\n`;\n","const standardColors = {\n  blue: '#5b6dff',\n  blueLight: '#a3a8ff',\n  blueNavy: '#456efd',\n  white: '#ffffff',\n  green: '#00ff00',\n  greenLight: '#1dcd9d',\n  red: '#ff0000',\n  redLight: '#ff6850',\n  orange: 'orange',\n  orangeLight: '#fbaf2a',\n  gray: '#d8d8d8',\n  grayDark: '#9ea2ae',\n};\n\nconst colors = {\n  main: {\n    primary: standardColors.blue,\n    secondary: standardColors.blueLight,\n    info: standardColors.blueNavy,\n    success: standardColors.green,\n    error: standardColors.red,\n    warning: standardColors.orange,\n  },\n  text: {\n    main: standardColors.white,\n    secondary: standardColors.blueLight,\n    additional: standardColors.grayDark,\n  },\n  border: standardColors.gray,\n};\n\nconst border = {\n  radius: '6px',\n};\n\nconst breakpoints = {\n  xs: 360,\n  md: 768,\n  xl: 1280,\n};\n\nconst getBreakpointPx = (breakpoint) => `(min-width: ${breakpoint}px)`;\n\nconst media = {\n  xs: getBreakpointPx(breakpoints.xs),\n  md: getBreakpointPx(breakpoints.md),\n  xl: getBreakpointPx(breakpoints.xl),\n};\n\nexport const theme = { breakpoints, media, colors, border, shadow: '0 0 10px rgba(0, 0, 0, 0.5)' };\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { MainLayout } from 'components/layouts/MainLayout';\nimport { store } from 'store/store';\nimport { routes } from 'routes/routes';\nimport { GlobalStyles } from 'styles/GlobalStyles';\nimport { theme } from 'styles/theme';\n\nexport const App = () => (\n  <>\n    <Provider store={store}>\n      <GlobalStyles />\n      <ThemeProvider theme={theme}>\n        <HashRouter>\n          <MainLayout>\n            <Routes>\n              {routes.map((route) => (\n                <Route key={route.path} {...route} />\n              ))}\n            </Routes>\n          </MainLayout>\n        </HashRouter>\n      </ThemeProvider>\n    </Provider>\n  </>\n);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.less';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}